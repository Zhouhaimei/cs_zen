
public static void mergeSort(int[] arr) {
  _mergeSort(arr, 0, arr.length - 1);
}

public static void _mergeSort(int[] arr, int low, int high) {
  int mid = (low + high) / 2;
  if (low < high) {
    _mergeSort(arr, low, mid);
    _mergeSort(arr, mid + 1, high);
    merge(arr, low, mid, high);
  }
}

public static void merge(int[] arr, int low, int mid, int high) {
  int[] temp = new int[high - low + 1];
  int l = low;
  int h = mid + 1;
  int k = 0;

  while (l <= mid && h <= high) {
    temp[k++] = arr[l] < arr[h] ? arr[l++] : arr[h++];
  }

  while (l <= mid) {
    temp[k++] = arr[l++];
  }

  while (h <= high) {
    temp[k++] = arr[h++];
  }

  for (int i = 0; i < temp.length; i++) {
    arr[i + low] = temp[i];
  }
}
